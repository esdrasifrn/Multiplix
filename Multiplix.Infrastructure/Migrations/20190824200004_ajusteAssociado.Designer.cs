// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Multiplix.Infrastructure.Data;

namespace Multiplix.Infrastructure.Migrations
{
    [DbContext(typeof(MultiplixContext))]
    [Migration("20190824200004_ajusteAssociado")]
    partial class ajusteAssociado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Multiplix.Domain.Entities.Associado", b =>
                {
                    b.Property<int>("AssociadoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HorarioFuncionamento");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("AssociadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Associado");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Patrocinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PatrocinadorId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PatrocinadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Patrocinador");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Permissao", b =>
                {
                    b.Property<int>("PermisaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NomeId")
                        .HasColumnType("varchar(250)");

                    b.HasKey("PermisaoId");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.PermissaoGrupo", b =>
                {
                    b.Property<int>("PermissaoId");

                    b.Property<int>("GrupoId");

                    b.HasKey("PermissaoId", "GrupoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("PermissaoGrupo");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.PermissaoUsuario", b =>
                {
                    b.Property<int>("PermissaoId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("PermissaoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PermissaoUsuario");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsSuperUser");

                    b.Property<bool>("Liberado");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UltimoAcesso");

                    b.Property<DateTime>("ValidadeSenha");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Celular = "98776655",
                            Email = "admin@hotmail.com",
                            IsSuperUser = true,
                            Liberado = false,
                            Login = "admin",
                            Nome = "Admin",
                            Senha = "123",
                            UltimoAcesso = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidadeSenha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.UsuarioGrupo", b =>
                {
                    b.Property<int>("UsuarioId");

                    b.Property<int>("GrupoId");

                    b.HasKey("UsuarioId", "GrupoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("UsuarioGrupo");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Associado", b =>
                {
                    b.HasOne("Multiplix.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.OwnsOne("Multiplix.Domain.ValueObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("AssociadoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP")
                                .HasColumnName("CEP")
                                .HasColumnType("varchar(15)");

                            b1.Property<string>("Cidade")
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(200)");

                            b1.Property<string>("Estado")
                                .HasColumnName("Estado")
                                .HasColumnType("varchar(2)");

                            b1.Property<string>("Numero")
                                .HasColumnName("Numero")
                                .HasColumnType("varchar(10)");

                            b1.Property<string>("Rua")
                                .HasColumnName("Rua")
                                .HasColumnType("varchar(200)");

                            b1.HasKey("AssociadoId");

                            b1.ToTable("Associado");

                            b1.HasOne("Multiplix.Domain.Entities.Associado")
                                .WithOne("Endereco")
                                .HasForeignKey("Multiplix.Domain.ValueObject.Endereco", "AssociadoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.Patrocinador", b =>
                {
                    b.HasOne("Multiplix.Domain.Entities.Patrocinador")
                        .WithMany("Patrocinados")
                        .HasForeignKey("PatrocinadorId");

                    b.HasOne("Multiplix.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.PermissaoGrupo", b =>
                {
                    b.HasOne("Multiplix.Domain.Entities.Grupo", "Grupo")
                        .WithMany("PermissaoGrupos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Multiplix.Domain.Entities.Permissao", "Permissao")
                        .WithMany("PermissaoGrupos")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.PermissaoUsuario", b =>
                {
                    b.HasOne("Multiplix.Domain.Entities.Permissao", "Permissao")
                        .WithMany("PermissaoUsuarios")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Multiplix.Domain.Entities.Usuario", "Usuario")
                        .WithMany("PermissaoUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Multiplix.Domain.Entities.UsuarioGrupo", b =>
                {
                    b.HasOne("Multiplix.Domain.Entities.Grupo", "Grupo")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Multiplix.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
